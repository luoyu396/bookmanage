<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tan.book.bookmanage.business.impl.OrderItemInfoDaoImpl">

    <!-- 查询列 -->
    <sql id="selectOrderItemInfoColunm">
		select t.item_id as itemId,
			 t.order_id as orderId,
			 t.book_id as bookId,
			 t.book_name as bookName,
			 t.book_price as bookPrice,
			 t.book_count as bookCount,
			 t.sub_total as subTotal,
			 t.create_time as createTime,
			 b.img_id as imgId
	</sql>

    <!-- 添加订单条目 -->
    <insert id="insert" parameterType="OrderItemInfo">
		insert into BT_T_ORDER_ITEM (item_id,
				order_id,
				book_id,
				book_name,
				book_price,
				book_count,
				sub_total,
				create_time)
		values (
				<choose>
					<when test="itemId != null and itemId !=''">
						#{itemId,jdbcType=VARCHAR},
					</when>
					<otherwise>
						UUID(),
					</otherwise>
				</choose>
				#{orderId,jdbcType=VARCHAR},
				#{bookId,jdbcType=VARCHAR},
				#{bookName,jdbcType=VARCHAR},
				#{bookPrice,jdbcType=DOUBLE},
				#{bookCount,jdbcType=INTEGER},
				#{subTotal,jdbcType=DOUBLE},
				#{createTime,jdbcType=DATE})
	</insert>

    <!-- 删除订单条目-->
    <delete id="delete" parameterType="String">
		delete from BT_T_ORDER_ITEM where item_id=#{_parameter}
	</delete>

    <!-- 更新订单条目 -->
    <update id="update" parameterType="OrderItemInfo">
		update BT_T_ORDER_ITEM t
		set t.order_id=#{orderId,jdbcType=VARCHAR},
			t.book_id=#{bookId,jdbcType=VARCHAR},
			t.book_name=#{bookName,jdbcType=VARCHAR},
			t.book_price=#{bookPrice,jdbcType=DOUBLE},
			t.book_count=#{bookCount,jdbcType=INTEGER},
			t.sub_total=#{subTotal,jdbcType=DOUBLE}
		where t.item_id=#{itemId}
	</update>

    <!-- 根据item_id查询订单条目-->
    <select id="selectOne" parameterType="String" resultType="OrderItemInfo">
        <include refid="selectOrderItemInfoColunm"></include>
        from BT_T_ORDER_ITEM t , bt_t_book b
        where t.book_id = b.book_id and t.item_id=#{_parameter}
    </select>

	<!-- 根据order_id查询订单条目-->
	<select id="orderItemInfoByOrderId" parameterType="String" resultType="OrderItemInfo">
		<include refid="selectOrderItemInfoColunm"></include>
		from BT_T_ORDER_ITEM t , bt_t_book b
		where t.book_id = b.book_id and t.order_id=#{_parameter}
	</select>

    <!-- 查询订单条目集合 -->
    <select id="selectList" parameterType="OrderItemInfo" resultType="OrderItemInfo">
        <include refid="selectOrderItemInfoColunm"></include>
        from BT_T_ORDER_ITEM t , bt_t_book b
		where t.book_id = b.book_id
			<if test="itemId != null and itemId !=''">
				and t.item_id = #{itemId}
			</if>
            <if test="orderId != null and orderId !=''">
                and t.order_id = #{orderId}
            </if>
			<if test="bookName != null and bookName !=''">
				and instr(t.book_name,#{bookName}) >0
			</if>
			<if test="bookPrice != null and bookPrice !=''">
				and t.book_price = #{bookPrice}
			</if>
			<if test="bookCount != null and bookCount !=''">
				and t.book_count = #{bookCount}
			</if>
            <if test="subTotal != null and subTotal !=''">
                and t.sub_total = #{subTotal}
            </if>
    </select>

	<!-- 统计图书销量-->
	<select id="statSaleCountList" parameterType="map" resultType="StatisticData">
		select
		b.book_id as bookId,
		b.type_id as typeId,
		b.book_name as bookName,
		b.isbn as isbn,
		b.publisher,
		b.author,
		b.page_num as pageNum,
		b.publish_date as publishDate,
		b.sale_price as salePrice,
		b.introduction,
		b.discount,
		b.img_id as imgId,
		b.create_time as createTime,
		t.type_name as typeName,
		st.saleCount
		from (select i.BOOK_ID, sum(i.BOOK_COUNT) as saleCount from bt_t_order_item i
		join bt_t_order o on i.ORDER_ID = o.ORDER_ID and o.ORDER_STATUS = '3'
		where 1=1
		<if test="startTime != null and startTime !=''">
			and i.CREATE_TIME &gt;= STR_TO_DATE(#{startTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		<if test="endTime != null and endTime !=''">
			and i.CREATE_TIME &lt;= STR_TO_DATE(#{endTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		GROUP BY i.BOOK_ID) st
		join bt_t_book b
		on st.BOOK_ID = b.BOOK_ID
		join bt_t_type t
		on b.TYPE_ID = t.TYPE_ID
		where 1=1
		<if test="typeId != null and typeId !=''">
			and (b.TYPE_ID = #{typeId}
			or EXISTS(select 1 from bt_t_type pt where pt.TYPE_ID = b.TYPE_ID
			and (pt.PARENT_ID = #{typeId} or pt.ROOT_ID = #{typeId})))
		</if>
		ORDER BY st.saleCount desc
	</select>

	<!-- 统计图书总销量-->
	<select id="statSaleCount" parameterType="map" resultType="int">
		select sum(i.BOOK_COUNT) as saleCount from bt_t_order_item i
		join bt_t_order o on i.ORDER_ID = o.ORDER_ID and o.ORDER_STATUS = '3'
		join bt_t_book b on i.BOOK_ID = b.BOOK_ID
		join bt_t_type t
		on b.TYPE_ID = t.TYPE_ID
		where 1=1
		<if test="startTime != null and startTime !=''">
			and i.CREATE_TIME &gt;= STR_TO_DATE(#{startTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		<if test="endTime != null and endTime !=''">
			and i.CREATE_TIME &lt;= STR_TO_DATE(#{endTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		<if test="typeId != null and typeId !=''">
			and (b.TYPE_ID = #{typeId}
			or EXISTS(select 1 from bt_t_type pt where pt.TYPE_ID = b.TYPE_ID
			and (pt.PARENT_ID = #{typeId} or pt.ROOT_ID = #{typeId})))
		</if>
	</select>

	<!-- 统计图书销售额-->
	<select id="statSalePriceList" parameterType="map" resultType="StatisticData">
		select
		b.book_id as bookId,
		b.type_id as typeId,
		b.book_name as bookName,
		b.isbn as isbn,
		b.publisher,
		b.author,
		b.page_num as pageNum,
		b.publish_date as publishDate,
		b.sale_price as salePrice,
		b.introduction,
		b.discount,
		b.img_id as imgId,
		b.create_time as createTime,
		t.type_name as typeName,
		st.totalSalePrice
		from (select i.BOOK_ID, sum(i.SUB_TOTAL) as totalSalePrice from bt_t_order_item i
		join bt_t_order o on i.ORDER_ID = o.ORDER_ID and o.ORDER_STATUS = '3'
		where 1=1
		<if test="startTime != null and startTime !=''">
			and i.CREATE_TIME &gt;= STR_TO_DATE(#{startTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		<if test="endTime != null and endTime !=''">
			and i.CREATE_TIME &lt;= STR_TO_DATE(#{endTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		GROUP BY i.BOOK_ID) st
		join bt_t_book b
		on st.BOOK_ID = b.BOOK_ID
		join bt_t_type t
		on b.TYPE_ID = t.TYPE_ID
		where 1=1
		<if test="typeId != null and typeId !=''">
			and (b.TYPE_ID = #{typeId}
			or EXISTS(select 1 from bt_t_type pt where pt.TYPE_ID = b.TYPE_ID
			and (pt.PARENT_ID = #{typeId} or pt.ROOT_ID = #{typeId})))
		</if>
		ORDER BY st.totalSalePrice desc
	</select>

	<!-- 统计图书总销售额-->
	<select id="statSalePrice" parameterType="map" resultType="double">
		select sum(i.SUB_TOTAL) as totalSalePrice from bt_t_order_item i
		join bt_t_order o on i.ORDER_ID = o.ORDER_ID and o.ORDER_STATUS = '3'
		join bt_t_book b on i.BOOK_ID = b.BOOK_ID
		join bt_t_type t
		on b.TYPE_ID = t.TYPE_ID
		where 1=1
		<if test="startTime != null and startTime !=''">
			and i.CREATE_TIME &gt;= STR_TO_DATE(#{startTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		<if test="endTime != null and endTime !=''">
			and i.CREATE_TIME &lt;= STR_TO_DATE(#{endTime}, '%Y-%m-%d %H:%i:%s')
		</if>
		<if test="typeId != null and typeId !=''">
			and (b.TYPE_ID = #{typeId}
			or EXISTS(select 1 from bt_t_type pt where pt.TYPE_ID = b.TYPE_ID
			and (pt.PARENT_ID = #{typeId} or pt.ROOT_ID = #{typeId})))
		</if>
	</select>
</mapper>